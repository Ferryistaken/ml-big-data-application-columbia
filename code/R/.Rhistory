chartSeries(PriceStartingFromOne,
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands(),
addCCI()
))
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
stock <- getSymbols("AAPL",
auto.assign = FALSE,
from = c("2010-", "01-", "01"))
getSymbols
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
PriceStartingFromOne
a = c(1, 2, 3, 4, 5, 6)
a[1, ]
PriceStartingFromOne[1, 2]
PriceStartingFromOne[1, ]
PriceStartingFromOne[, 1]
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(stock)
chart_Series(stock)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
addVo
chart_Series(
stock
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(
stock,
chart_theme = chart("black")
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(
stock,
theme = chart_theme("black")
)
chart_Series(
stock,
theme = chart_theme("black")
)
chart_Series(
stock,
theme = chart_theme()
)
chart_theme
chartSeries(
stock
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
# Library quantmod - stock data into R
library(quantmod)
rm(list = ls())
ticker <- "MSFT"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
tail(stock)
Returns <- quantmod::dailyReturn(stock)
sum(Returns)
par(mfrow = c(2, 2))
chartSeries(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chartTheme("black"),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chartSeries(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dygraph(stock) %>% dyCandlestick() %>%
dyLegend(show = "onmouseover", hideOnMouseOut = TRUE) %>%
dyRangeSelector()
dygraph(stock) %>% dyCandlestick()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dygraph(withoutVolume) %>% dyCandlestick() %>%
dyLegend(show = "onmouseover", hideOnMouseOut = TRUE) %>%
dyRangeSelector()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
stock
stock[, 5]
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dev.off()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
rm(list = ls())
gc()
ticker <- "MSFT"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
Returns <- quantmod::dailyReturn(stock)
chartSeries(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chartTheme("black"),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chartSeries(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
chartSeries(stock[, 5],
name = paste0("Daily volume for", ticker),
layout = NULL,
theme = chartTheme("black"),
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chartTheme("black"),
)
theme = chart_theme(),
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(volume,
name = paste0("Daily volume for", ticker),
layout = NULL,
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
rm(list = ls())
gc()
dev.off()
ticker <- "MSFT"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
Returns <- quantmod::dailyReturn(stock)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
rm(list = ls())
gc()
ticker <- "ARKK"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
tail(stock)
Returns <- quantmod::dailyReturn(stock)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
library(quantmod)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
Returns <- quantmod::dailyReturn(stock)
ticker <- "ARKK"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
tail(stock)
Returns <- quantmod::dailyReturn(stock)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
layout = NULL,
theme = chart_theme(),
#TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dev.off()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/monthly-growth-strategy/growth-strategy.R", echo=TRUE)
ggplot(closeDataTime)
ggplot(closeDataTime,
aes(x = date, y = close) +
geom_line() +
labs(title = "Stock Chart", y = "Closing Price", x = "") +
theme_tq()
)
closeData %>%
ggplot(aes(x=index,y=value, color=series)) + geom_line()
closeData[, 2] %>%
ggplot(aes(x=index,y=value, color=series)) + geom_line()
ggplot(closeDataTime, aes(Xax,value, col=variable)) +
geom_point() +
stat_smooth()
quick_plot(closeDateTime)
qplot(closeDateTime)
qplot(closeDateTime)
qplot(closeDataTime)
ggplot(closeDataTime, aes(x = Index, y = value)) + geom_point()
ggplot(closeDataTime, aes(x = Index, y = value)) + geom_point()
autoplot(closeDataTime, geom = "line")
ggplot(closeData)
returnsList <- apply(closeDataTime, 2, quantmod::dailyReturn)
tail(closeDataTime)
head(closeDataTime)
returnsList <- apply(closeDataTime, 2, quantmod::dailyReturn)
returnsList <- apply(closeDataTime, 2, quantmod::Delt)
View(returnsList)
plot(cumprod(returnList))
plot(cumprod(returnsList))
plot(cumprod(returnsList))
plot(cumprod(returnsList), xlim = c(1, 5000), ylim = c(1, 50000))
plot(cumprod(returnsList), xlim = c(1, 5000), ylim = c(1, 500))
cumprod(returnsList)
View(returnsList)
cumprod(returnsList + 1)
returnsList + 1
returnsList <- apply(closeDataTime, 2, quantmod::Delt) + 1
View(returnsList)
apply(returnsList, 2, cumprod)
apply(returnsList, 2, cumprod)
returnsList
apply(closeDataTime, 2, quantmod::Delt)
returnsList = returnsList[-1,]
View(returnsList)
apply(returnsList, 2, cumprod)
cumprod(returnsList[, 1])
returnsList[, 1]
View(returnsList)
cumprod(returnsList[, 1])
cumprod(returnsList[, 7])
returnsList <- apply(closeDataTime, 2, quantmod::Delt) + 1
returnsList = returnsList[-1,]
cumprod(returnsList[, 7])
returnsList <- apply(closeDataTime, 2, quantmod::Delt) + 1
View(returnsList)
returnsList = returnsList[-1,]
View(returnsList)
apply(returnsList, 2, cumprod)
returnsList, 2, cumprod
returnsList
apply(returnsList, 2, cumprod)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/monthly-growth-strategy/growth-strategy.R", echo=TRUE)
View(closeDataTime)
View(returnsList)
apply(returnsList, 2, cumprod)
plot(returnsList)
View(closeDataTime)
cumprod(returnsList[, 2])
cumprod(returnsList[2, ])
cumprod(returnsList[, 2])
returnsList[, 2]
cumprod(returnsList[, 2])
plot(cumprod(returnsList[, 2]))
apply(returnsList, 2, cumprod)
applied <- apply(returnsList, 2, cumprod)
View(applied)
plot(applied)
ggplot(applied, aes(index, value)) +
geom_line(aes(colour = series))
plot(applied[, 1])
plot(applied[, 2])
plot(applied[, 3])
plot(applied[, 3], type = "l")
applied[, 2]
applied
rownames(closeData)
rownames(applied) = rownames(closeData)
rownames(applied) = rownames(closeData)[-1, ]
rownames(closeData)[-1]
rownames(applied) = rownames(closeData)[-1]
appliedTime <- as.xts(applied)
applied$Date <- rownames(closeData)[-1]
View(applied)
applied
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/monthly-growth-strategy/growth-strategy.R", echo=TRUE)
applied <- apply(returnsList, 2, cumprod)
View(applied)
rownames(closeData)[-1]
rownames(closeData)
applied["Date"] <- rownames(closeData)[-1]
applied <- apply(returnsList, 2, cumprod)
length(rownames(closeData)[-1])
dim(applied)
rowname(closeData)[-1]
rownames(closeData)[-1]
appliedWithDate <- cbind(applied, Date = rownames(closeData)[-1])
View(appliedWithDate)
ggplot(data = appliedWithDate,
mapping = aes(x = Date,
y = AAPL.Close))
appliedWithDate <- cbind(applied, Date = rownames(closeData)[-1])
class(appliedWithDate)
as.data.frame(appliedWithDate)
df <- as.data.frame(appliedWithDate)
View(df)
ggplot(data = df,
mapping = aes(x = Date,
y = AAPL.Close))
df$Date
df$AAPL.Close
ggplot(data = df,
mapping = aes(x = Date,
y = AAPL.Close))+
geom_line()
ggplot(data = df,
mapping = aes(x = Date,
y = AAPL.Close))+
geom_point()
