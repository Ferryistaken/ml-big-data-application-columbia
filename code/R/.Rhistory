par(mfrow=c(2, 3))
# Experiment
for (n in c(10, 100, 200, 500, 1000, 10000)) {
# Data:
x = runif(n) # draw N samples from uniform random variable / uniform distrubition
y = runif(n) # same here
d = sqrt(x^2 + y^2) # compute square root of sume of squares of x and y
# Rejection Region:
label = ifelse(d <= 1, 1, 0) # create label for coloring purposes
# total number of points = r^2, number of red points = (pi x r^2)/4
#
pi_hat = 4*plyr::count(label)[2,2]/n # recover pi
# Plot:
plot(x, y, col = label+1, main = paste0("Est: value of Pi = ", pi_hat))
}
par(mfrow=c(2, 3))
# Experiment
for (n in c(10, 100, 200, 500, 1000, 10000)) {
# Data:
x = runif(n) # draw N samples from uniform random variable / uniform distrubition
y = runif(n) # same here
d = sqrt(x^2 + y^2) # compute square root of sume of squares of x and y
# Rejection Region:
label = ifelse(d <= 1, 1, 0) # create label for coloring purposes
# total number of points = r^2, number of red points = (pi x r^2)/4
#
pi_hat = 4*plyr::count(label)[2,2]/n # recover pi
# Plot:
plot(x, y, col = label+1, main = paste0("Est: value of Pi = ", pi_hat))
}
par(mfrow=c(2, 3))
# Experiment
for (n in c(10, 100, 200, 500, 1000, 10000)) {
# Data:
x = runif(n) # draw N samples from uniform random variable / uniform distrubition
y = runif(n) # same here
d = sqrt(x^2 + y^2) # compute square root of sume of squares of x and y
# Rejection Region:
label = ifelse(d <= 1, 1, 0) # create label for coloring purposes
# total number of points = r^2, number of red points = (pi x r^2)/4
#
pi_hat = 4*plyr::count(label)[2,2]/n # recover pi
# Plot:
plot(x, y, col = label+1, main = paste0("Est: value of Pi = ", pi_hat))
}
par(mfrow=c(2, 3))
# Experiment
for (n in c(10, 100, 200, 500, 1000, 10000)) {
# Data:
x = runif(n) # draw N samples from uniform random variable / uniform distrubition
y = runif(n) # same here
d = sqrt(x^2 + y^2) # compute square root of sume of squares of x and y
# Rejection Region:
label = ifelse(d <= 1, 1, 0) # create label for coloring purposes
# total number of points = r^2, number of red points = (pi x r^2)/4
#
pi_hat = 4*plyr::count(label)[2,2]/n # recover pi
# Plot:
plot(x, y, col = label+1, main = paste0("Est: value of Pi = ", pi_hat))
}
# normal random variable (10 numbers with average 0 and standard dev 1)
mean(rnorm(10, 0, 1))
# normal random variable (10 numbers with average 0 and standard dev 1)
hist(mean(rnorm(10, 0, 1)))
hist(rnorm(10, 0, 1))
hist(rnorm(1000, 0, 1))
rnorm(10, mean = 0, sd = 1)
rnorm(10, mean = 0, sd = 1)
# normal random variable (10 numbers with average 0 and standard dev 1)
hist(rnorm(10, mean = 0, sd = 1))
dev.off()
# normal random variable (10 numbers with average 0 and standard dev 1)
hist(rnorm(10, mean = 0, sd = 1))
# normal random variable (10 numbers with average 0 and standard dev 1)
hist(rnorm(1000, mean = 0, sd = 1))
# normal random variable (10 numbers with average 0 and standard dev 1)
hist(rnorm(10000000, mean = 0, sd = 1))
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/visualize-data-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
plot(i)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
paths <- 5
for (i in 1:paths) {
plot(i)
}
datapoints = rnorm(250, mean = 1, sd = 1)
# Create 1 line
for (i in 1:250) {
plot(i, datapoints)
}
for (i in 1:250) {
print(i)
}
print(datapoints)
for (i in 1:250) {
plot(i, datapoints)
}
datapoints = rnorm(250, mean = 1, sd = 1)
# Create 1 line
for (i in 1:250) {
plot(i, datapoints, "index", "value")
}
plot(1:250, datapoints, "index", "value")
plot(1:250, datapoints)
plot(datapoints, 1:250)
plot(1:250, datapoints)
plot(1:250, datapoints, type="l")
datapoints = rnorm(250, mean = 1, sd = 0.1)
plot(1:250, datapoints, type="l")
datapoints = rnorm(250, mean = 1, sd = 0.001)
plot(1:250, datapoints, type="l")
datapoints = rnorm(250, mean = 1, sd = 0.001)
# Create 1 line
#for (i in 1:250) {
plot(1:250, datapoints, type="l")
#}
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
datapoints = rnorm(250, mean = 0, sd = 0.001)
# Create 1 line
plot(1:250, datapoints, type="l")
datapoints = rnorm(250, mean = 1, sd = 0.000001)
# Create 1 line
plot(1:250, datapoints, type="l")
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
datapoints = rnorm(250, mean = 1, sd = 0.000001)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
datapoints = rnorm(250, mean = 1, sd = 0.1)
datapoints = rnorm(250, mean = 1, sd = 0.1)
datapoints = rnorm(250, mean = 1, sd = 0.1)
plot(1:250, datapoints, type="l", xlabel="Number of time units", ylable="Datapoints")
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints")
warnings()
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", sub="HW Day 2")
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
datapoints = rnorm(250, mean = 1, sd = 0.1)
# Create 1 line
dev.new(width = 550, height = 330, unit = "px")
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", ylim=c(1,10))
# Create 1 line
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", ylim=c(1,2))
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", ylim=c(-2,2))
# Create 1 line
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", ylim=c(0,2))
datapoints = rnorm(250, mean = 1, sd = 1)
# Create 1 line
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", ylim=c(0,2))
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
plot(1:250, datapoints, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation", ylim=c(-3,5))
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
mcmc_single = function(time, mean, sd) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(time, mean, sd)
mcmc_single = function(time, mean, sd) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(time, mean, sd)
mcmc_single = function(time, mean, sd) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(time, mean, sd)
mcmc_single = function(time, mean, sd) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(time, mean, sd)
mcmc_single = function(time, mean, sd) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(time, mean, sd)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
time <- 250
mean <- 0
sd <- 0.05
mcmc_single = function(time = 100, mean = 0, sd = 0.05) {
raw_data = rnorm(time, mean = mean, sd = sd)
# Data manipulation
data = raw_data + 1
plot_data = cumprod(data) # cumulative product, it will accumulate the product of all number in the series
# Create 1 line
plot(1:time, plot_data, type="l", xlab="Number of time units", ylab="Datapoints", main="MCMC Simulation")
}
mcmc_single(250, 0, 0.05)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/h2-day2.R", echo=TRUE)
