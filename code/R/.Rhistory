stock$ARKK.Close
stockReturn = quantmod::dailyReturn(stock$ARKG.Close[1000:1676])
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day3/visualization-tools.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day3/visualization-tools.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day3/visualization-tools.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day3/visualization-tools.R", echo=TRUE)
# Tree search current gen for the candidate with the least errors
# We want the candidate with the least mistakes
stock$stockName.Close
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day3/visualization-tools.R", echo=TRUE)
install.packages("animation")
library(animation)
install.packages("animation")
library(animation)
library(animation)
library(animation)
install.packages("animation")
library(animation)
rm(list = ls())
gc()
library(animation)
install.pacakges("animations")
packages.install("animations")
packages.install("animations")
packages.install("animations")
install.packages("animations")
install.packages("animations")
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
plot(x, y, type = "l")
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
plot(x[i], y[i])
i = 3
plot(x[i], y[i])
plot(x[i], y[i])
plot(x[i], y[i])
i = 30
plot(x[i], y[i])
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day4/day4.R", echo=TRUE)
install.packages("animations", repos='http://cran.us.r-project.org')
install.packages("animation", repos='http://cran.us.r-project.org')
library(animation)
1 + 1
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/day3/visualization-tools.R", echo=TRUE)
rm(list = ls())
gc()
dev.off()
dev.off()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
rownames(ARKK)
quantmod::dailyReturn(ARKK)
head(quantmod::dailyReturn(ARKK))
returns <- quantmod::dailyReturn(ARKK)
sum(returns)
sum(returns$daily.returns)
sum(returns$daily.returns)
par(crow = c(1, 2))
par(mfrow = c(1, 2))
plot(returns)
plot(cumsum(returns$daily.returns))
plot(1 + cumsum(returns$daily.returns))
plot(returns)
plot(returns)
plot(1 + cumsum(returns$daily.returns))
plot(returns)
plot(1 + cumprod(returns$daily.returns))
cumprod(returns$daily.returns)
plot(cumprod(returns$daily.returns + 1))
plot(returns)
plot(returns)
plot(cumprod(returns$daily.returns + 1))
returns$daily.returns + 1
returns$daily.returns + 1
a = c(1, 2,3 ,4)
a + 1
a = c(1, 2,3 ,4) + 1
a
returns
sum(returns$daily.returns)
sum(returns)
rm(list = ls())
getSymbols("ARKK")
returns <- quantmod::dailyReturn(ARKK)
par(mfrow = c(1, 2))
chartSeries(returns)
chartSeries(cumprod(returns$daily.returns + 1))
chartSeries(cumprod(returns$daily.returns + 1), layout = NULL)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
stock <- getSymbols("ARKK")
summary(stock)
tail(stock)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chartSeries(Returns,
layout = NULL,
theme = chartTheme("black"),
)
chartSeries(PriceStartingFromOne,
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands(),
addCCI()
))
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
stock <- getSymbols("AAPL",
auto.assign = FALSE,
from = c("2010-", "01-", "01"))
getSymbols
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
PriceStartingFromOne
a = c(1, 2, 3, 4, 5, 6)
a[1, ]
PriceStartingFromOne[1, 2]
PriceStartingFromOne[1, ]
PriceStartingFromOne[, 1]
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(PriceStartingFromOne,
type = "candle",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo(),
addBBands())
)
chartSeries(stock)
chart_Series(stock)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
addVo
chart_Series(
stock
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(
stock,
chart_theme = chart("black")
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(
stock,
theme = chart_theme("black")
)
chart_Series(
stock,
theme = chart_theme("black")
)
chart_Series(
stock,
theme = chart_theme()
)
chart_theme
chartSeries(
stock
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
# Library quantmod - stock data into R
library(quantmod)
rm(list = ls())
ticker <- "MSFT"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
tail(stock)
Returns <- quantmod::dailyReturn(stock)
sum(Returns)
par(mfrow = c(2, 2))
chartSeries(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chartTheme("black"),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chartSeries(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dygraph(stock) %>% dyCandlestick() %>%
dyLegend(show = "onmouseover", hideOnMouseOut = TRUE) %>%
dyRangeSelector()
dygraph(stock) %>% dyCandlestick()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dygraph(withoutVolume) %>% dyCandlestick() %>%
dyLegend(show = "onmouseover", hideOnMouseOut = TRUE) %>%
dyRangeSelector()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
stock
stock[, 5]
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dev.off()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
rm(list = ls())
gc()
ticker <- "MSFT"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
Returns <- quantmod::dailyReturn(stock)
chartSeries(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chartTheme("black"),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chartSeries(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
chartSeries(stock[, 5],
name = paste0("Daily volume for", ticker),
layout = NULL,
theme = chartTheme("black"),
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chartTheme("black"),
)
theme = chart_theme(),
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chartTheme("black"),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = c(
addEMA(50, col = 'yellow'),
addEMA(200, col = 'blue'),
addVo())
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(volume,
name = paste0("Daily volume for", ticker),
layout = NULL,
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
rm(list = ls())
gc()
dev.off()
ticker <- "MSFT"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
Returns <- quantmod::dailyReturn(stock)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
rm(list = ls())
gc()
ticker <- "ARKK"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
tail(stock)
Returns <- quantmod::dailyReturn(stock)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
library(quantmod)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
Returns <- quantmod::dailyReturn(stock)
ticker <- "ARKK"
stock <- getSymbols(ticker,
auto.assign = FALSE,
from = paste0("2020-", "01-", "01"))
tail(stock)
Returns <- quantmod::dailyReturn(stock)
chart_Series(Returns,
name = paste0("Daily returns for ", ticker),
layout = NULL,
theme = chart_theme(),
)
PriceStartingFromOne <- cumprod(Returns$daily.returns + 1)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
type = "auto",
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
layout = NULL,
theme = chart_theme(),
TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
chart_Series(PriceStartingFromOne,
name = paste0("Time series from ", ticker, ", repositioned to 1$"),
layout = NULL,
theme = chart_theme(),
#TA = "addEMA(50, col = 'yellow');addEMA(200, col = 'blue')",
)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
dev.off()
source("~/Documents/learning/columbia/columbia-machine-learning-big-data-real-world-applications/code/R/general-code/stock-data.R", echo=TRUE)
